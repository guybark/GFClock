<Window x:Class="GFClock.SettingsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:GFClock"
        mc:Ignorable="d"
        Title="Settings" 
        SizeToContent="WidthAndHeight"
        MaxWidth="360" MaxHeight="600"
        ResizeMode="NoResize">

    <Window.Resources>

        <local:StatusToAccessibleNameConverter x:Key="StatusToAccessibleNameConverter"/>
        <local:StatusToImageConverter x:Key="StatusToImageConverter"/>
        
        <Style TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="Focusable" Value="True" />
        </Style>

        <Style TargetType="{x:Type DataGridColumnHeader}" x:Key="StatusHeaderStyle">
            <Setter Property="Focusable" Value="True" />
            <Setter Property="AutomationProperties.Name" Value="Status" />
        </Style>

        <Style TargetType="DataGridCell" x:Key="StatusCellStyle">
            <Setter Property="AutomationProperties.Name"
                Value="{Binding Status,
                Converter={StaticResource StatusToAccessibleNameConverter}}"/>
        </Style>

        <!-- Without Focusable being set here, the header element gets exposed 
             through UIA as now being focusabled. This means the customer can
             tab to it, but Narrator will not follow focus. So make it focusable,
             and while we're here, give it a UIA Name property too. -->
        <!--<Style TargetType="{x:Type DataGridColumnHeadersPresenter}">
            <Setter Property="AutomationProperties.Name" Value="All Columns" />
            <Setter Property="Focusable" Value="True" />
        </Style>-->
        
    </Window.Resources>

    <Grid Margin="8">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <TextBlock Grid.Row="0" Name="TextBlockWithHyperlink" TextWrapping="Wrap"
            HorizontalAlignment="Left">
            This dialog only exists to support discussion on the keyboard accessibility of WPF controls at 
            <Hyperlink x:Name="IntroLink"
                NavigateUri="http://microsoft.com"
                RequestNavigate="Hyperlink_RequestNavigate">
                Real-world learnings on keyboard accessibilty in WinForms and WPF apps: Part 1
            </Hyperlink>
            .
        </TextBlock>
        <ScrollViewer Grid.Row="1" Margin="0 10 0 10" VerticalScrollBarVisibility="Auto">
            <StackPanel>
                <GroupBox Header="A Bit of History" Margin="10" Padding="10">
                    <StackPanel Height="Auto">
                        <StackPanel Orientation="Horizontal" Margin="0 0 0 10">
                            <Label Name="ClockTypeComboBoxLabel" VerticalAlignment="Center" Margin="0 0 8 0"
                                Target="{Binding ElementName=ClockTypeComboBox}" 
                                Content="Clock _Type:" />
                            <ComboBox Name="ClockTypeComboBox" HorizontalAlignment="Left" HorizontalContentAlignment="Stretch"
                                VerticalAlignment="Center" SelectedIndex="0"
                                AutomationProperties.LabeledBy="{Binding ElementName=ClockTypeComboBoxLabel}">
                                <ComboBoxItem Content="Pendulum" />
                                <ComboBoxItem Content="Not-pendulum" />
                            </ComboBox>
                        </StackPanel>
                        <Label Name="DetailsDataGridLabel" Content="_Details:" Target="{Binding ElementName=DetailsDataGrid}" />
                        <DataGrid Name="DetailsDataGrid" ItemsSource="{Binding}" AutoGenerateColumns="False"
                            AutomationProperties.LabeledBy="{Binding ElementName=DetailsDataGridLabel}" >
                            <DataGrid.Columns>
                                <DataGridTemplateColumn
                                    HeaderStyle="{StaticResource StatusHeaderStyle}"
                                    CellStyle="{StaticResource StatusCellStyle}">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Image MaxHeight="16" MaxWidth="16" 
                                                Source="{Binding Status,
                                                Converter={StaticResource StatusToImageConverter}}"/>                                            
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTextColumn Header="Name" Binding="{Binding Name}" />
                                <DataGridTextColumn Header="Date" Binding="{Binding Date}" />
                                <DataGridHyperlinkColumn Header="Details" Binding="{Binding Details}" />
                            </DataGrid.Columns>
                        </DataGrid>
                    </StackPanel>
                </GroupBox>
                <GroupBox Header="Grandfather clock display" Margin="10 0 10 10" Padding="10">
                    <StackPanel
                        KeyboardNavigation.TabNavigation="Once"
                        KeyboardNavigation.DirectionalNavigation="Cycle">
                        <RadioButton x:Name="ShowBothHandsRadioButton" Content="Show _both hands" HorizontalAlignment="Left"
                            IsChecked="True" />
                        <RadioButton Content="Show _one hands" HorizontalAlignment="Left" />
                    </StackPanel>
                </GroupBox>
            </StackPanel>
        </ScrollViewer>
        <Button Grid.Row="2" Content="_Close" Click="CloseButton_Click" HorizontalAlignment="Right"
                Padding="8"/>
    </Grid>
</Window>
